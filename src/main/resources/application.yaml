spring:
  application.name: 'demo'
  datasource:
    url: jdbc:mysql://localhost:3306/demo?useSSL=false
    username: demo
    password: demo
  jpa:
    database: mysql
    show-sql: true
    hibernate:
      ddl-auto: update

#------------------------------------------------------------------------------------------------------------------
customer.poller.cron: 1100
#------------------------------------------------------------------------------------------------------------------

#------------------------------------------------------------------------------------------------------------------
spring.cloud.stream:
  bindings:
    output:
      destination: customer-enriched
      content-type: application/*+avro
      useNativeEncoding: true
      producer:
        useNativeEncoding: true
        valueSerde: org.apache.kafka.common.serialization.Serdes$LongSerde
    input:
      destination: customer-change
      group: ${spring.application.name}
      content-type: application/*+avro
      consumer:
        useNativeDecoding: true
        enableDlq: true
        dlqName: customer-change-dlq
        # The following 2 props are not needed as they are same as the global ones.
        # Adding it here in order to illustrate the usage of it if they are indeed different from the global Serde's
#        keySerde: org.apache.kafka.common.serialization.Serdes$StringSerde
#        valueSerde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
#------------------------------------------------------------------------------------------------------------------
spring.cloud.stream.schema:
  avro:
    dynamic-schema-generation-enabled: true
#------------------------------------------------------------------------------------------------------------------
spring.cloud.stream.kafka.streams:
  binder:
    brokers: localhost:9092
    auto-create-topics: true
    serdeError: sendToDlq # logAndContinue
    configuration:
      schema.registry.url: http://localhost:8081
      commit.interval.ms: 1000
      default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      default.value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
